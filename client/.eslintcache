[{"E:\\Adhyan\\client\\src\\index.js":"1","E:\\Adhyan\\client\\src\\reportWebVitals.js":"2","E:\\Adhyan\\client\\src\\App.js":"3","E:\\Adhyan\\client\\src\\components\\Home\\Home.js":"4","E:\\Adhyan\\client\\src\\components\\Navbar\\Navbar.js":"5","E:\\Adhyan\\client\\src\\components\\Landpage\\Landpage.js":"6","E:\\Adhyan\\client\\src\\components\\Dashboard\\Dashboard.js":"7","E:\\Adhyan\\client\\src\\components\\ContactForm\\ContactForm.js":"8"},{"size":517,"mtime":1619246517484,"results":"9","hashOfConfig":"10"},{"size":375,"mtime":1619246517485,"results":"11","hashOfConfig":"10"},{"size":532,"mtime":1620241375147,"results":"12","hashOfConfig":"10"},{"size":960,"mtime":1620738101585,"results":"13","hashOfConfig":"10"},{"size":742,"mtime":1620283731543,"results":"14","hashOfConfig":"10"},{"size":2108,"mtime":1620737813130,"results":"15","hashOfConfig":"10"},{"size":7529,"mtime":1620241375171,"results":"16","hashOfConfig":"10"},{"size":2972,"mtime":1620072936963,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"uxvufk",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"20"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"E:\\Adhyan\\client\\src\\index.js",[],["36","37"],"E:\\Adhyan\\client\\src\\reportWebVitals.js",[],"E:\\Adhyan\\client\\src\\App.js",[],"E:\\Adhyan\\client\\src\\components\\Home\\Home.js",["38","39","40"],"E:\\Adhyan\\client\\src\\components\\Navbar\\Navbar.js",[],"E:\\Adhyan\\client\\src\\components\\Landpage\\Landpage.js",[],"E:\\Adhyan\\client\\src\\components\\Dashboard\\Dashboard.js",["41","42","43","44","45","46","47","48","49","50"],"import React,{useEffect,useState,useRef,Fragment} from 'react'\r\nimport ReactS3 from 'react-s3'\r\nimport Axios from 'axios'\r\nimport Navbar from \"../Navbar/Navbar\"\r\nimport { embed as BokehEmbed } from \"@bokeh/bokehjs\"\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faFileUpload } from '@fortawesome/free-solid-svg-icons'\r\nimport JsonTable from 'ts-react-json-table';\r\n\r\nimport './Dashboard.css'\r\n\r\n\r\nexport default function SubmitFile() {\r\n    \r\n    const [csvID,setCsvID] = useState(\"\")\r\n    const [data,setData] = useState('test')\r\n    const [uploaded,setUploaded] = useState(false)\r\n    const [linkSent,setLinkSent] = useState(false)\r\n    const [filename,setFilename] = useState()\r\n    const [recDetails,setRecDetails] = useState({})\r\n    const [xVar,setXVar] = useState(\"\")\r\n    const [yVar,setYVar] = useState(\"\")\r\n\r\n    const config = {\r\n      bucketName: 'adhyan-csv-storage',\r\n      dirName: 'csvStorage', /* optional */\r\n      region: 'ap-south-1',\r\n      accessKeyId: \"AKIAVSBDGESQ4IZMVP6D\" ,\r\n      secretAccessKey: \"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\",\r\n    }\r\n    \r\n\r\n    const upload = async (e)=>{\r\n      console.log(e.target)\r\n      ReactS3.uploadFile(e.target.files[0],config)\r\n      .then((data)=>{\r\n          setCsvID(data.location)\r\n          alert(\"File Uploaded: \" + e.target.files[0].name)\r\n      })\r\n      .catch((err)=>console.log(err))\r\n      setLinkSent(true)\r\n      \r\n    }\r\n    const submit = async(e) =>{\r\n      try {\r\n        const details = {\r\n          csvLink: csvID,\r\n        }\r\n        const response = await fetch(\"/submit\",{\r\n          method: \"POST\",\r\n          headers:{\r\n            \"Content-Type\": \"application/json\"\r\n          },\r\n          body: JSON.stringify(details)\r\n        })\r\n       \r\n      } catch (error) {\r\n          console.log(error)\r\n      }\r\n    }\r\n  const loadData = async()=>{\r\n   \r\n    try {\r\n      if(linkSent === false){\r\n        alert(\"Please Upload a file first\")\r\n      }\r\n      else{\r\n        await submit()\r\n        await Axios.get('/fileDetails')\r\n        .then(response => {\r\n          const parsedJSON = JSON.parse(response.data)\r\n          console.log(response.data)\r\n          setRecDetails(parsedJSON)\r\n          \r\n        })\r\n        await setUploaded(true)\r\n      }\r\n    } catch (error) {\r\n      console.log(error)\r\n    }\r\n  }\r\n\r\n\r\n  const renderVariables = (columnList)=>{\r\n    return(\r\n      columnList.map((item)=>{\r\n        return(\r\n          <>\r\n          <li key = {item}>{item}</li>\r\n          </>\r\n        )\r\n      })\r\n    )\r\n  }\r\n\r\n  const getScatterPlot = async(e)=>{\r\n    try {\r\n      const var_details = {\r\n        \"xVar\":xVar,\r\n        \"yVar\":yVar\r\n      }\r\n      const response = await fetch('/variableDetails',{\r\n        method:\"POST\",\r\n        headers:{\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify(var_details)\r\n      })\r\n      await Axios.get('/scatterPlot')\r\n            .then(resp=>BokehEmbed.embed_item(resp.data,'dataPlot'))\r\n            .catch(error=>console.log(error))\r\n    } catch (error) {\r\n      console.log(error)\r\n    }\r\n  }\r\n  const getLinePlot = async(e)=>{\r\n    try {\r\n      const var_details = {\r\n        \"xVar\":xVar,\r\n        \"yVar\":yVar\r\n      }\r\n      const response = await fetch('/variableDetails',{\r\n        method:\"POST\",\r\n        headers:{\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify(var_details)\r\n      })\r\n      await Axios.get('/linePlot')\r\n            .then(resp=>BokehEmbed.embed_item(resp.data,'dataPlot'))\r\n            .catch(error=>console.log(error))\r\n    } catch (error) {\r\n      console.log(error)\r\n    }\r\n  }\r\n  const getBarPlot = async(e)=>{\r\n    try {\r\n      const var_details = {\r\n        \"xVar\":xVar,\r\n        \"yVar\":yVar\r\n      }\r\n      const response = await fetch('/variableDetails',{\r\n        method:\"POST\",\r\n        headers:{\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify(var_details)\r\n      })\r\n      await Axios.get('/barPlot')\r\n            .then(resp=>BokehEmbed.embed_item(resp.data,'dataPlot'))\r\n            .catch(error=>console.log(error))\r\n    } catch (error) {\r\n      console.log(error)\r\n    }\r\n  }\r\nreturn (\r\n  <Fragment>\r\n    <Navbar/>\r\n    \r\n    <div className=\"file-details\">\r\n      <p className=\"details-heading\">DETAILS:</p>\r\n      {uploaded === true?\r\n            (<>\r\n              <button onClick={loadData} className = \"side-getResult-button\">\r\n                GET RESULTS</button>\r\n              <div className = \"details-div\">\r\n                  <p className = \"detail-name\"><strong>NUMBER OF ROWS:</strong>\r\n                    <span className=\"detail-value\">{recDetails.rows}</span>\r\n                  </p>\r\n                  <p className = \"detail-name\"><strong>NUMBER OF COLUMNS:</strong>\r\n                    <span className = \"detail-value\">{recDetails.cols}</span>\r\n                  </p>\r\n                  <p className = \"detail-name\">Variables in your file:</p>\r\n                  <ul className = \"detail -value\">\r\n                     {renderVariables(recDetails.columns)}\r\n                  </ul>\r\n                  {/* {recDetails.row_data} */}\r\n                  <p className=\"detail-name\">Data Description</p>\r\n                  <JsonTable rows={recDetails.row_data} columns={recDetails.columns}/>\r\n              </div>\r\n            </>\r\n\r\n            ):<><p className = \"no_file_tagline\">Upload a file to view details</p></>\r\n      }\r\n    </div>\r\n    <div className=\"chart-area\"> \r\n      \r\n      {uploaded === false? \r\n        (\r\n          <>\r\n        <FontAwesomeIcon icon={faFileUpload} size = \"6x\"className = \"fileUpload-icon\" />\r\n        <div className=\"file-input\">\r\n          <p className=\"fileInput-heading\">Select a .xlsx or .csv file</p>\r\n\r\n          <input type = \"file\" className = \"file\" id = \"file\" onChange = {upload}/>\r\n          <label for = \"file\">UPLOAD</label>\r\n          <button onClick = {loadData} className = \"center-getResult-button\">GET RESULT</button>\r\n        </div> \r\n        </> \r\n        ):\r\n        <><div className = 'graphArea' id = 'dataPlot'></div></>\r\n      }\r\n      \r\n      <div className = 'resultedData' id = 'dataPlot'></div>\r\n    </div>\r\n    <div className=\"tools-area\">\r\n      <p className=\"tools-heading\">Tools</p>\r\n      <div className=\"variable-select\">\r\n          <label htmlFor=\"xVar\" className = \"enter-variable\">Enter X-Variable</label>\r\n          <input className = 'text-input'\r\n                        type = 'text'\r\n                        id = \"xVar\"\r\n                        onChange = {(e)=>\r\n                        {setXVar(e.target.value)\r\n                          console.log(xVar)\r\n                  }}/>\r\n          <br/>\r\n          <label htmlFor=\"yVar\" className = \"enter-variable\">Enter Y-Variable</label>\r\n          <input className = 'text-input'\r\n                        type = 'text'\r\n                        id = \"yVar\"\r\n                        onChange = {(e)=>\r\n                        {setYVar(e.target.value)\r\n                          console.log(yVar)\r\n                  }}/>\r\n      </div>\r\n      <div className=\"graph-tools\">\r\n        <p>Select Visualization</p>\r\n        <button className=\"scatterPlot-chart-button\" onClick = {getScatterPlot}>Scatter-Plot</button>\r\n        <button className=\"scatterPlot-chart-button\" onClick = {getLinePlot}>Line-Plot</button>\r\n        <button className=\"scatterPlot-chart-button\" onClick = {getBarPlot}>Bar-Plot</button>      \r\n      </div>\r\n    </div>\r\n  </Fragment>\r\n);\r\n}\r\n\r\n","E:\\Adhyan\\client\\src\\components\\ContactForm\\ContactForm.js",[],{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","severity":1,"message":"56","line":2,"column":8,"nodeType":"57","messageId":"58","endLine":2,"endColumn":14},{"ruleId":"55","severity":1,"message":"59","line":9,"column":12,"nodeType":"57","messageId":"58","endLine":9,"endColumn":17},{"ruleId":"55","severity":1,"message":"60","line":18,"column":11,"nodeType":"57","messageId":"58","endLine":18,"endColumn":17},{"ruleId":"55","severity":1,"message":"61","line":1,"column":15,"nodeType":"57","messageId":"58","endLine":1,"endColumn":24},{"ruleId":"55","severity":1,"message":"62","line":1,"column":34,"nodeType":"57","messageId":"58","endLine":1,"endColumn":40},{"ruleId":"55","severity":1,"message":"63","line":16,"column":12,"nodeType":"57","messageId":"58","endLine":16,"endColumn":16},{"ruleId":"55","severity":1,"message":"64","line":16,"column":17,"nodeType":"57","messageId":"58","endLine":16,"endColumn":24},{"ruleId":"55","severity":1,"message":"65","line":19,"column":12,"nodeType":"57","messageId":"58","endLine":19,"endColumn":20},{"ruleId":"55","severity":1,"message":"66","line":19,"column":21,"nodeType":"57","messageId":"58","endLine":19,"endColumn":32},{"ruleId":"55","severity":1,"message":"67","line":49,"column":15,"nodeType":"57","messageId":"58","endLine":49,"endColumn":23},{"ruleId":"55","severity":1,"message":"67","line":102,"column":13,"nodeType":"57","messageId":"58","endLine":102,"endColumn":21},{"ruleId":"55","severity":1,"message":"67","line":122,"column":13,"nodeType":"57","messageId":"58","endLine":122,"endColumn":21},{"ruleId":"55","severity":1,"message":"67","line":142,"column":13,"nodeType":"57","messageId":"58","endLine":142,"endColumn":21},"no-native-reassign",["68"],"no-negated-in-lhs",["69"],"no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","'csvID' is assigned a value but never used.","'upload' is assigned a value but never used.","'useEffect' is defined but never used.","'useRef' is defined but never used.","'data' is assigned a value but never used.","'setData' is assigned a value but never used.","'filename' is assigned a value but never used.","'setFilename' is assigned a value but never used.","'response' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]